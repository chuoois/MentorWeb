// business/ai.service.js
const { GoogleGenerativeAI } = require("@google/generative-ai");
const Mentor = require("../models/mentor.model");

class AiService {
  constructor() {
    this.client = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    this.model = this.client.getGenerativeModel({ model: "models/gemini-2.5-flash" });
  }

  async getMentorContext() {
  const mentors = await Mentor.find({ status: "ACTIVE" })
    .select("_id full_name job_title company category skill bio location price")
    .lean();

  // ƒê∆∞a d·ªØ li·ªáu JSON d·∫°ng ƒë∆°n gi·∫£n cho AI
  return JSON.stringify(mentors, null, 2);
}

  async chatMentorAdvisor(userMessage) {
  const contextJson = await this.getMentorContext();

  const prompt = `
B·∫°n l√† h·ªá th·ªëng AI t∆∞ v·∫•n ch·ªçn mentor ph√π h·ª£p nh·∫•t cho mentee.

D∆∞·ªõi ƒë√¢y l√† danh s√°ch mentor d∆∞·ªõi d·∫°ng JSON:
mentors = ${contextJson}

H√£y ƒë·ªçc y√™u c·∫ßu c·ªßa mentee v√† ch·ªçn ra **t·ªëi ƒëa 3 mentor ph√π h·ª£p nh·∫•t**.
Ch·ªâ tr·∫£ v·ªÅ JSON h·ª£p l·ªá, kh√¥ng th√™m text kh√°c ngo√†i JSON.

C·∫•u tr√∫c JSON b·∫Øt bu·ªôc:
{
  "recommended": [
    {
      "mentorId": "<_id>",
      "full_name": "<t√™n mentor>",
      "reason": "<l√Ω do ch·ªçn>",
      "link": "/api/mentors/<_id>"
    }
  ]
}

Y√™u c·∫ßu mentee: ${userMessage}
`;

  const result = await this.model.generateContent(prompt);
  const text = result.response.text().trim();

  // üí° T·ª± ƒë·ªông parse n·∫øu JSON b·ªã tr·∫£ d∆∞·ªõi d·∫°ng string
  try {
    // N·∫øu Gemini tr·∫£ JSON chu·∫©n
    return JSON.parse(text);
  } catch {
    // N·∫øu Gemini tr·∫£ text c√≥ JSON n·∫±m b√™n trong, th√¨ c·ªë g·∫Øng b√≥c t√°ch
    const jsonStart = text.indexOf("{");
    const jsonEnd = text.lastIndexOf("}");
    if (jsonStart >= 0 && jsonEnd > jsonStart) {
      const possibleJson = text.slice(jsonStart, jsonEnd + 1);
      try {
        return JSON.parse(possibleJson);
      } catch {
        return { raw: text }; // fallback cu·ªëi
      }
    }
    return { raw: text };
  }
}
}

// üëá ƒê√¢y l√† ph·∫ßn QUAN TR·ªåNG
module.exports = new AiService();
